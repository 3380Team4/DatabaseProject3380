@model IEnumerable<ThemeParkApplication.Models.Attractions>

@{
    ViewData["Title"] = "Attractions";
}
@using Microsoft.AspNetCore.Identity
@using ThemeParkApplication.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<br />

<br /><br />
<h2>Attractions</h2>



<div class="row">

    @foreach (var item in Model)
    {
        <div class="card" style="width: 15rem;">
            <div class="card-body">

                <h5 class="card-title">
                @item.AttractionName
                @if (item.AttractionStatusNavigation.AttractionStatus == "OPEN")
                {
                    <span class="badge badge-success">OPEN</span>
                } else {  
                    <span class="badge badge-danger">CLOSED</span>
                }
                </h5>


                @if (item.AgeRequirement != null)
                {
                    <h6>Age <span class="badge badge-pill badge-warning">@item.AgeRequirement years +</span></h6>
                }
           
                @if (item.HeightRequirement != null)
                {
                    <h6>Height <span class="badge badge-pill badge-warning">@item.HeightRequirement inches+</span></h6>
                }
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Manager") || User.IsInRole("Admin")))
                {
                    <a class="btn btn-sm btn-success" asp-action="Edit" asp-route-id="@item.AttractionId">Edit</a>
                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.AttractionId">Delete</a>
                }
            </div>
        </div>
    }

    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Manager") || User.IsInRole("Admin")))
    {
        <div class="card" style="width: 15rem;">
            <div class="card-body">
                <a asp-action="Create" class="btn btn-sm btn-primary">Add new</a>
            </div>
        </div>
    }
</div>
